    #ifndef HTML_CONTENT_H
    #define HTML_CONTENT_H

    const char* index_html PROGMEM = "<html><body onload=\"init_function()\">    <h1>ETHERNET_LED_CONTROLLER</h1>    <form action='/submit' method='post'>        <h1>NETWORK SETTINGS</h1>        NETWORK TYPE        <select id='network_type' name='network_type' onchange=\"updateNetworkOptions()\">            <option value='ETHERNET'>ETHERNET</option>            <option value='ACCESS_POINT'>ACCESS_POINT</option>            <option value='WIFI'>WIFI</option>        </select>        <br>        <br>        <div id=\"eth_settings\">            auto assign ethernet connection            <select id='eth_auto' name='eth_auto' onchange=\"updateNetworkAuto()\">                <option value='true'>true</option>                <option value='false'>false</option>            </select>            <br>            <br>            <div id=\"eth_auto_ip\">                Eth assigned IP: <input type='text' name='eth_auto_ip' value='{{eth_ip}}' readonly><br>            </div>            <div id=\"eth_manual\">                Eth Static IP: <input type='text' name='eth_ip' value='{{eth_ip}}'><br>                Eth Subnet Mask: <input type='text' name='eth_sn' value='{{eth_sn}}'><br>                ETH Gateway: <input type='text' name='eth_gw' value='{{eth_gw}}'><br>            </div>        </div>        <div id=\"ap_settings\">            network name (ssid): <input type='text' name='ap_ssid' value='{{ap_ssid}}'><br>            network password: <input type='text' name='ap_pw' value='{{ap_pw}}'><br>            <br>            <br>            auto assign access point connection            <select id='ap_auto' name='ap_auto' onchange=\"updateNetworkAuto()\">                <option value='true'>true</option>                <option value='false'>false</option>            </select>            <br>            <br>            <div id=\"ap_auto_ip\">                AP assigned IP: <input type='text' name='ap_auto_ip' value='{{ap_ip}}' readonly><br>            </div>            <div id=\"ap_manual\">                AP Static IP: <input type='text' name='ap_ip' value='{{ap_ip}}'><br>                AP Subnet Mask: <input type='text' name='ap_sn' value='{{ap_sn}}'><br>                AP Gateway: <input type='text' name='ap_gw' value='{{ap_gw}}'><br>            </div>        </div>        <div id=\"wifi_settings\">            network name (ssid): <input type='text' name='wifi_ssid' value='{{wifi_ssid}}'><br>            network password: <input type='text' name='wifi_pw' value='{{wifi_pw}}'><br>            <br>            <br>            auto assign wifi connection            <select id='wifi_auto' name='wifi_auto' onchange=\"updateNetworkAuto()\">                <option value='true'>true</option>                <option value='false'>false</option>            </select>            <br>            <br>            <div id=\"wifi_auto_ip\">                Eth assigned IP: <input type='text' name='wifi_auto_ip' value='{{wifi_ip}}' readonly><br>            </div>            <div id=\"wifi_manual\">                Wifi Static IP: <input type='text' name='wifi_ip' value='{{wifi_ip}}'><br>                Wifi Subnet Mask: <input type='text' name='wifi_sn' value='{{wifi_sn}}'><br>                Wifi Gateway: <input type='text' name='wifi_gw' value='{{wifi_gw}}'><br>            </div>        </div>        <h1>LED SETTINGS</h1>        led type:        <select id='led_type' name='led_type' onchange=\"updateLedOptions()\">            <option value='WS2815'>WS2815</option>            <option value='APA102'>APA102</option>        </select>        <br>        <br>        <div id=\"num_output_select_container\">            number of parallel outputs:            <select id='num_output_select' name='num_output_select' onchange=\"updateNumLeds()\">                <option value='1'>1</option>                <!-- dynamically insert more options here -->            </select>            <br>            <br>        </div>        <div id=\"output_leds_container\">            <div id=\"num_led_1_option\">number of leds - output_1: <input type='number' name='num_led_1' value='{{num_led_1}}'><br>            </div>            <div id=\"num_led_2_option\">number of leds - output_2: <input type='number' name='num_led_2' value='{{num_led_2}}'><br>            </div>            <div id=\"num_led_3_option\">number of leds - output_3: <input type='number' name='num_led_3' value='{{num_led_3}}'><br>            </div>            <div id=\"num_led_4_option\">number of leds - output_4: <input type='number' name='num_led_4' value='{{num_led_4}}'><br>            </div>            <div id=\"num_led_5_option\">number of leds - output_5: <input type='number' name='num_led_5' value='{{num_led_5}}'><br>            </div>            <div id=\"num_led_6_option\">number of leds - output_6: <input type='number' name='num_led_6' value='{{num_led_6}}'><br>            </div>            <div id=\"num_led_7_option\">number of leds - output_7: <input type='number' name='num_led_7' value='{{num_led_7}}'><br>            </div>            <div id=\"num_led_8_option\">number of leds - output_8: <input type='number' name='num_led_8' value='{{num_led_8}}'><br>            </div>        </div>        <br>        <br>        milliseconds until frame update: <input type='number' name='frame_time' value='{{frame_time}}'><br>        update frame on artsync packet: <select id='use_artsync' name='use_artsync'>            <option value='true'>true</option>            <option value='false'>false</option>        </select>        <br>        <br>        <input type='submit' value='Submit'>    </form></body><script>    function init_function() {    document.getElementById('network_type').value = '{{network_type}}';    document.getElementById('eth_auto').value = '{{eth_auto}}';    document.getElementById('ap_auto').value = '{{ap_auto}}';    document.getElementById('wifi_auto').value = '{{wifi_auto}}';    document.getElementById('led_type').value = '{{led_type}}';    document.getElementById('num_output_select').value = '{{}num_output_select}';    document.getElementById('use_artsync').value = '{{use_artsync}}';    updateNetworkOptions();    updateLedOptions();}function updateNetworkOptions() {    console.log(\"running updateNetworkOptions\");    var networkType = document.getElementById(\"network_type\");    var ethSettings = document.getElementById(\"eth_settings\");    var apSettings = document.getElementById(\"ap_settings\");    var wifiSettings = document.getElementById(\"wifi_settings\");    if (networkType.value === \"ETHERNET\") {        ethSettings.style.display = \"\";        apSettings.style.display = \"none\";        wifiSettings.style.display = \"none\";    }    else if (networkType.value === \"ACCESS_POINT\") {        ethSettings.style.display = \"none\";        apSettings.style.display = \"\";        wifiSettings.style.display = \"none\";    }    else if (networkType.value === \"WIFI\") {        ethSettings.style.display = \"none\";        apSettings.style.display = \"none\";        wifiSettings.style.display = \"\";    }    updateNetworkAuto();}function updateNetworkAuto() {    console.log(\"running updateNetworkOptions\");    var ethAuto = document.getElementById(\"eth_auto\");    var ethAutoIp = document.getElementById(\"eth_auto_ip\");    var ethManual = document.getElementById(\"eth_manual\");    var apAuto = document.getElementById(\"ap_auto\");    var apAutoIp = document.getElementById(\"ap_auto_ip\");    var apManual = document.getElementById(\"ap_manual\");    var wifiAuto = document.getElementById(\"wifi_auto\");    var wifiAutoIp = document.getElementById(\"wifi_auto_ip\");    var wifiManual = document.getElementById(\"wifi_manual\");    if (ethAuto.value === \"false\") {         ethManual.style.display = \"\";        ethAutoIp.style.display = \"none\";     }    else {         ethManual.style.display = \"none\";         ethAutoIp.style.display = \"\";     }    if (apAuto.value === \"false\") {         apManual.style.display = \"\";         apAutoIp.style.display = \"none\";     }    else {         apManual.style.display = \"none\";          apAutoIp.style.display = \"\";         }    if (wifiAuto.value === \"false\") {         wifiManual.style.display = \"\";          wifiAutoIp.style.display = \"none\";         }    else {         wifiManual.style.display = \"none\";          wifiAutoIp.style.display = \"\";         }}    function updateLedOptions() {        console.log(\"running updateLedOptions\");        var ledTypeSelect = document.getElementById(\"led_type\");        var numOutputSelect = document.getElementById(\"num_output_select\");        var numOutputSelectContainer = document.getElementById(\"num_output_select_container\");        numOutputSelect.innerHTML = \"\";        var upperNum = 1;        if (ledTypeSelect.value === \"WS2815\") {            upperNum = 8;            numOutputSelectContainer.style.display = \"\";        }        else {            numOutputSelectContainer.style.display = \"none\";        }        for (let i = 1; i <= upperNum; i++) {            var thisOption = document.createElement(\"option\");            thisOption.value = i;            thisOption.text = i;            numOutputSelect.add(thisOption);        }        updateNumLeds()    }    function updateNumLeds() {        console.log(\"running updateNumLeds\");        var numOutputSelect = document.getElementById(\"num_output_select\");        var outputLedsContainer = document.getElementById(\"output_leds_container\");        var children = outputLedsContainer.children;        for (var i = 0; i < children.length; i++) {            var child = children[i];            if (i < numOutputSelect.value) {                child.style.display = \"\";            }            else {                child.style.display = \"none\";            }            // console.log(\"Tag Name: \" + child.tagName + \", Text Content: \" + child.textContent);        }    }</script><style>    body {        background-color: black;        color: white;        font-family: \"Courier New\", Courier, monospace;        text-align: center;    }    form {        margin: 20px auto; /* Center the form horizontally */        padding: 20px;        border: 1px solid white;        max-width: 500px; /* Set a maximum width for the form */    }    input,    select {        width: 100%;        padding: 8px;        margin-bottom: 10px;        box-sizing: border-box; /* Ensures padding is included in width calculation */    }    input[type=\"submit\"] {        background-color: white;        color: black;        border: none;        padding: 10px 20px;        font-family: \"Courier New\", Courier, monospace;        font-size: 18px;         cursor: pointer;        font-weight: bold;    }</style></html>";

    #endif
    